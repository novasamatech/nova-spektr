on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10


env:
  CSC_FOR_PULL_REQUEST: true

jobs:
  release-build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Install dependencies
        uses: ./.github/workflows/install-pnpm

      - name: Get tag name
        uses: olegtarasov/get-tag@v2.1 # Put version in GIT_TAG_NAME environment variable

      - name: Update package.json version
        uses: jossef/action-set-json-field@v2
        with:
          file: package.json
          field: version
          value: ${{ env.GIT_TAG_NAME }}

      - name: Add MacOS certs
        if: matrix.os == 'macos-latest'
        run: chmod +x .github/add_cert_in_keychain.sh && .github/add_cert_in_keychain.sh
        env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Build app
        run: |
          pnpm build
          pnpm postbuild
          pnpm dist

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifats
          path: |
            release/dist/*.exe
            release/dist/*.dmg
            release/dist/*.AppImage

  releas-project:
    name: Release Omni build-project
    runs-on: ubuntu-latest
    needs: release-build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifats

      - name: Debug
        run: ls -la

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: 'Release ${{ steps.get_version.outputs.VERSION }}'
          tag_name: ${{ github.ref }}
          generate_release_notes: true
          files: |
            *.dmg
            *.exe
            *.AppImage
